{"version":3,"file":"static/js/712.be814bb3.chunk.js","mappings":"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","sources":["helpers/validation.js","styles/theme.js","components/Contacts/Contacts.styled.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Form/Form.jsx","pages/ContactsPage.js"],"sourcesContent":["const REQUIRED_FIELD = 'Fill the field';\n\nexport const nameValidate = {\n    required: REQUIRED_FIELD,\n    pattern: {\n        value: /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        message:\n            \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    },\n};\n\nexport const passwordValidate = {\n    required: REQUIRED_FIELD,\n    validate: value => {\n        if (value.length < 7) {\n            return 'The Password must contain at least 7 values';\n        }\n        return true;\n    },\n};\n\nexport const emailValidate = {\n    required: REQUIRED_FIELD,\n};\n\nexport const numberValidate = {\n    required: REQUIRED_FIELD,\n    pattern: {\n        value:\n            /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        message:\n            'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +.',\n    },\n};","export const theme = Object.freeze({\n  colors: {\n    white: '#ffffff',\n    gray: '#afb3c0',\n    light: '#F0FFFF',\n    dark: '#212121',\n    shadow: ' rgba(175, 203, 225, 0.39)',\n    green: '#008B00',\n    orange: '#FFA500',\n    red: ' #ff0000',\n    darkGray: '#83868d',\n    titleBC: '#E0EEEE',\n    title: '#0884F9',\n    accent: '#FF4500',\n    valueBC: '#C1CDCD',\n  },\n  border: {\n    transactionBorder: '2px solid #83868d',\n  },\n  shadow: '4px 4px 8px 0px rgba(94, 20, 4, 0.27)',\n});","import styled from '@emotion/styled';\nimport { theme } from 'styles';\n\nexport const ListContacts = styled.ul``;\n\nexport const ItemContacts = styled.li`\n  display: flex;\n  // gap: 15px;\n  align-items: baseline;\n  justify-content: space-between;\n  padding: 10px;\n  height: 30px;\n  width: 250px;\n  margin: 5px 0;\n`;\n\nexport const TextContacts = styled.p`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 18px;\n  line-height: 1.13;\n  color: ${theme.colors.title};\n`;\n\nexport const DeleteBtn = styled.button`\n  font-size: 18px;\n   transition: all 0.3s ease;\n  &:hover {\n  box-shadow: ${theme.shadow};\n font-size:20px;\n  border-radius: 5px;\n`;","export const getContacts = state => state.contacts.item;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n    const filter = getFilter(state).toLowerCase();\n    const contacts = getContacts(state);\n\n    return contacts.filter(contact => contact.name.toLowerCase().includes(filter)).sort((a, b) => a.name.localeCompare(b.name));\n};","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-action';\n\nconst addContact = ({ name, number }) =>\n  dispatch => {\n    const contact = {\n      name,\n      number,\n    };\n    \n    dispatch(addContactRequest());\n      \n    axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nconst fetchContacts = () => async dispatch => {\n    dispatch(fetchContactsRequest()); try {\n    const { data } = await axios.get('/contacts');\n    dispatch(fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(fetchContactsError(error.message));\n  }\n}\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n\nconst contactsOperations = {\n  addContact,\n  fetchContacts,\n  deleteContact,\n};\nexport default contactsOperations;","import { VscTrash } from 'react-icons/vsc';\nimport {\n  ListContacts,\n  ItemContacts,\n  TextContacts,\n  DeleteBtn,\n} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contacts-selectors';\nimport contactsOperations from 'redux/contacts/contacts-operations';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(getFilteredContacts);\n\n  return (\n    <ListContacts>\n      {filteredContacts.map(({ id, name, phone }) => (\n        <ItemContacts key={id}>\n          <TextContacts>\n            {name}: {phone}\n          </TextContacts>\n          <DeleteBtn type=\"button\" onClick={() => dispatch(contactsOperations.deleteContact(id))}>\n            <VscTrash />\n          </DeleteBtn>\n        </ItemContacts>\n      ))}\n    </ListContacts>\n  );\n};","import styled from '@emotion/styled';\nimport { theme } from 'styles';\n\nexport const Wrapper = styled.div``;\nexport const TitleFilter = styled.h3`\n  color: ${theme.colors.title};\n  font-style: normal;\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.71;\n  letter-spacing: 0.03em;\n`;\nexport const InputFilter = styled.input`\n  padding: 3px;\n  border-radius: 5px;\n`;","import { IoFilterOutline } from 'react-icons/io5';\nimport { Wrapper, TitleFilter, InputFilter } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changedFilter } from 'redux/contacts/contacts-action';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n\n  const value = useSelector(state => state.contacts.filter);\n\n  return (\n    <Wrapper>\n      <TitleFilter>\n        Find contacts by name <IoFilterOutline />\n      </TitleFilter>\n      <InputFilter\n        type=\"text\" name=\"filter\" value={value}\n       onChange={e => dispatch(changedFilter(e.currentTarget.value))}\n      />\n    </Wrapper>\n  );\n};","import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { nameValidate, numberValidate } from 'helpers';\nimport { Controller, useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\nimport { Notify } from 'notiflix';\n\nconst theme = createTheme();\n\nexport function Form() {\n  const {\n    handleSubmit,\n    reset,\n    control,\n    formState: { errors },\n  } = useForm();\n\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(getContacts);\n\n  const onSubmit = data => {\n    const { name, number } = data;\n    const isContact = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n\n    if (!isContact) {\n      dispatch(contactsOperations.addContact({ name, number }));\n      reset({ data });\n      return;\n    }\n    Notify.alert(`${name} is already in contacts`);\n    reset({ data });\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box component=\"div\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box sx={{ marginTop: 8, display: 'flex', flexDirection: 'column' }}>\n          <Typography component=\"h1\" variant=\"h5\">\n            ADD CONTACT FORM\n          </Typography>\n          <Box component='form' onSubmit={handleSubmit(onSubmit)} sx={{ mt: 2, display: 'flex', flexDirection: 'column' }}>\n            <Controller control={control} rules={nameValidate} name=\"name\" defaultValue=\"\" render={({ field }) => (\n              <TextField\n                autoFocus autoComplete=\"off\" label=\"Name\"\n                onChange={e => field.onChange(e)}\n                value={field.value || ''}\n                error={!!errors.name?.message}\n                helperText={errors.name?.message}\n                margin=\"normal\"\n                sx={{ maxWidth: '350px' }}\n              />)}\n            />\n            <Controller control={control} name=\"number\" rules={numberValidate} render={({ field }) => (\n              <TextField type=\"tel\" label=\"Number\" autoFocus autoComplete='off' defaultValue=''\n                onChange={e => field.onChange(e)}\n                value={field.value || ''}\n                error={!!errors.name?.message}\n                helperText={errors.number?.message}\n              sx={{ maxWidth: '350px' }}/>\n            )} />\n            <Button type=\"submit\" variant=\"contained\" sx={{ mt: 3, mb: 2, maxWidth: '150px' }}>Add Contact</Button>\n          </Box>\n        </Box>\n      </Box>\n    </ThemeProvider>\n  );\n};","import { Typography } from '@mui/material';\nimport { Contacts } from 'components/Contacts';\nimport { Filter } from 'components/Filter';\nimport { Form } from 'components/Form';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsOperations from 'redux/contacts/contacts-operations';\nimport { getContacts } from 'redux/contacts/contacts-selectors';\n\nexport function ContactsPage() {\n    const dispatch = useDispatch();\n    const contacts = useSelector(getContacts);\n\n   useEffect(() => {\n    const asyncFn = async () => {\n      dispatch(contactsOperations.fetchContacts());\n    };\n    asyncFn();\n  }, [dispatch]);\n  return (\n    <>\n      <Form />\n      {contacts.length !== 0 ? (\n        <>\n          <Filter />\n          <Contacts />\n        </>\n      ) : (\n        <Typography component={'span'} variant={'body2'}>\n          YYou don't have any contact yet\n        </Typography>\n      )}\n    </>\n  );\n};"],"names":["REQUIRED_FIELD","nameValidate","required","pattern","value","message","passwordValidate","validate","length","emailValidate","numberValidate","theme","Object","freeze","colors","white","gray","light","dark","shadow","green","orange","red","darkGray","titleBC","title","accent","valueBC","border","transactionBorder","ListContacts","styled","ItemContacts","TextContacts","DeleteBtn","getContacts","state","contacts","item","getFilteredContacts","filter","getFilter","toLowerCase","contact","name","includes","sort","a","b","localeCompare","contactsOperations","addContact","number","dispatch","addContactRequest","axios","then","data","addContactSuccess","catch","error","addContactError","fetchContacts","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","deleteContact","contactId","deleteContactRequest","deleteContactSuccess","deleteContactError","Contacts","useDispatch","filteredContacts","useSelector","map","id","phone","type","onClick","Wrapper","TitleFilter","InputFilter","Filter","onChange","e","changedFilter","currentTarget","createTheme","Form","useForm","handleSubmit","reset","control","errors","formState","ThemeProvider","Box","component","maxWidth","CssBaseline","sx","marginTop","display","flexDirection","Typography","variant","onSubmit","find","Notify","mt","rules","defaultValue","render","field","TextField","autoFocus","autoComplete","label","helperText","margin","Button","mb","ContactsPage","useEffect","asyncFn"],"sourceRoot":""}